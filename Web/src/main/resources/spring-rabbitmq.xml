<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/rabbit
	http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <!-- 定义RabbitMQ的连接工厂 publisher-confirms="true"表示通过该连接工厂创建的连接支持publisher confirm-->
	<!-- 更改此处ip username 以及password-->
    <rabbit:connection-factory id="connectionFactory" host="localhost" port="5672" username="admin" password="admin"
                               virtual-host="ojvroot" connection-timeout="5000" publisher-confirms="true"/>

    <!-- MQ的管理，包括队列、交换器等 auto-startup="true"表示如果交换机，队列，绑定不存在时可以自动声明-->
    <rabbit:admin auto-startup="true" connection-factory="connectionFactory"/>

    <!--topic类型交换机，自动声明-->
    <rabbit:topic-exchange name="mail_topic_exchange" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding pattern="mail.*" queue="oj_queue"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>
    <rabbit:direct-exchange name="oj.direct.judge" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="oj_judge" key="oj.judge"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!--<rabbit:direct-exchange name="spring_direct_exchange">
        <rabbit:bindings>
            <rabbit:binding  queue="spring_myqueue" key="test_routingKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <rabbit:fanout-exchange name="spring_fanout_exchange">
        <rabbit:bindings>
            <rabbit:binding queue="spring_myqueue"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>-->
    <rabbit:direct-exchange name="oj.direct.result" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="oj_jresult" key="oj.jresult"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <rabbit:direct-exchange name="oj.direct.hack" auto-declare="true">
        <rabbit:bindings>
            <rabbit:binding queue="oj_hack" key="oj.hack"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!-- 定义队列，自动声明 -->
    <rabbit:queue name="oj_hack" auto-declare="true"/>
    <rabbit:queue name="oj_queue" auto-declare="true"/>
    <rabbit:queue name="oj_jresult" auto-declare="true"/>
    <rabbit:queue name="oj_judge" auto-declare="true"/>
    <!-- 定义Rabbit模板，指定连接工厂以及定义exchange -->
    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"
                     confirm-callback="confirmCallBackHandler" mandatory="true"
                     return-callback="returnCallBackHandler" retry-template="retryTemplate"/>

    <!--重试模板:出现连接失败等错误时可以重试-->
    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <!--重试回退策略，指的是每次重试是立即重试还是等待一段时间后重试-->
        <!--ExponentialBackOffPolicy 指数回退策略-->
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="200"/>
                <property name="maxInterval" value="30000"/>
            </bean>
        </property>
        <!--SimpleRetryPolicy 简单重试策略，固定次数-->
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="5"/>
            </bean>
        </property>
    </bean>
    <rabbit:annotation-driven/>
    <!--消费队列监听 设置消费者手动ack，消息转换器(不设置默认为SimpleMessageConverter) -->
    <!--<rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual"-->
                               <!--message-converter="jsonMessageConverter">-->
        <!--<rabbit:listener ref="mailSendHandler" queue-names="oj_queue"/>-->
    <!--</rabbit:listener-container>-->
    <!-- 消费队列监听-还可以设置预抓取消息数量，线程池等
        <rabbit:listener-container connection-factory="connectionFactory" concurrency="1"
                                   max-concurrency="2" prefetch="1" task-executor="taskExecutor">
            <rabbit:listener ref="consumerHandler" queue-names="spring_myqueue"/>
        </rabbit:listener-container>
    -->
    <!--消费者处理类-->
    <bean id="mailSendHandler" class="pers.dreamer.handler.MailSendHandler"/>
    <!--confirm回调处理类-->
    <bean id="confirmCallBackHandler" class="pers.dreamer.handler.ConfirmCallBackHandler"/>
    <!--return回调处理类-->
    <bean id="returnCallBackHandler" class="pers.dreamer.handler.ReturnCallbackHandler"/>
    <!-- 消息转换器,消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>

    <bean id="rabbitListenerContainerFactory"
          class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="messageConverter" ref="jsonMessageConverter" />
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="concurrentConsumers" value="3" />
        <property name="maxConcurrentConsumers" value="10" />

    </bean>
</beans>